# 

##
## main java makefile
##

SHELL=/bin/sh

EXE=
OBJ=.o
CP = cp -f

##
## someplace to put the -n32 command for sgi. (CFLAGS) doesn't
## work because we need it for compiling and linking but
## CFLAGS uses -c
##
LDFLAGS=

INSTALL_DIR=$(TOP)/server
EXAMPLE_DIR=$(TOP)/examples
BIN_ARCH_DIR=$(INSTALL_DIR)/bin_$(ARCH)
BIN_DIR=$(INSTALL_DIR)/bin
LIB_DIR=$(INSTALL_DIR)/lib_$(ARCH)
MACRO_DIR = $(INSTALL_DIR)/dxmacros
CLASS_DIR = $(INSTALL_DIR)/class

include Makefile_$(ARCH)

default: bin

.SUFFIXES: .c .class .java

.c$(OBJ):
	rm -f $@
	$(CC) -c $(CFLAGS) $*.c

.java.class:
	$(JAVAC) $(JFLAGS) $*.java

MACROS = \
	gifmac.net  	\
	vrmlmac.net	\
	dxmac.net	\
	weboptionsmac.net


SRCS = \
	DXServerThread.java 		\
	DXServer.java 			\
	DXThread.java			\
	DXThreadCommand.java		\
	FileStyle.java			\
	FileStyleWRAP.java		\
	FileStyleHTML.java		\
	FileStyleHTM.java		\
	FileStyleANY.java		\
	ServerThreadCommand.java 	\
	StatusThreadCommand.java 	\
	ServerCommand.java 		\
	CleanUpDaemon.java		\
	ConnectionEntry.java		\
	ConnectThread.java		\
	StatusThread.java		\
	DXLink.c

OBJS = \
	DXServerThread.class 	\
	DXServer.class 		\
	DXThread.class		\
	DXThreadCommand.class	\
	FileStyle.class		\
	FileStyleWRAP.class	\
	FileStyleHTML.class	\
	FileStyleHTM.class	\
	FileStyleANY.class	\
	ServerThreadCommand.class \
	StatusThreadCommand.class \
	ServerCommand.class 	\
	CleanUpDaemon.class	\
	ConnectionEntry.class	\
	ConnectThread.class	\
	StatusThread.class

EXTRAS = \
	startserver		\
	startserver.bat		\
	stopserver

HELPER_OBJS = \
	DXLink$(OBJ)


SHRD_DEPS = \
	DXLink$(OBJ)

$(SHRD_DEPS): DXServerThread.h DXServer.h
DXServerThread.h: DXServerThread.java
DXServer.h: DXServer.java

subdirs:

# standard nightly build rules
# dxserver.paths is a config file which contains names of directories
# in which DXServer should look for net files.  Rather than checking
# it into/out of rcs, just generate the file so that we can make
# it contain `pwd`
co: dxserver.paths
	if [ ! -d dx ] ; then \
	    ln -s ../../dx .; \
	fi ; \
	for i in $(SRCS) $(MACROS) $(EXTRAS) ; \
	do \
	    if [ -f $$i ] ; \
	    then find RCS/$$i,v -newer $$i -exec co $(COFLAGS) $$i \;;  \
	    else co $(COFLAGS) $$i; \
	    fi; \
	done 

dxserver.paths: Makefile
	if [ ! -r "dxserver.paths" ]; then \
	    here=`pwd` ; \
	    echo $$here/../../../../../java/server/unixnets > dxserver.paths ;\
	fi

test install.hfiles install.lib install.libg install.libO install.alllib:
	@echo ui++/java $@ ok

# install server java files
install install.bin install.allbin install.bing install.binO install.allbin: bin
	$(MAKE) $(MFLAGS) installall 

bin bing binO: 
	if [ "$$ARCH" = "sgi" -a -d $(JBASE) ]; then \
	  $(MAKE) $(MFLAGS) all ; \
	fi
	@echo ui++/java $@ ok


DXServer.h: DXServer.class 
	rm -f DXServer.h
	$(JAVAH) -jni DXServer

DXServerThread.h: DXServerThread.class 
	rm -f DXServerThread.h
	$(JAVAH) -jni DXServerThread

$(SHRD_OBJ): $(SHRD_DEPS)
	rm -f $(SHRD_OBJ)
	$(SHRD_CMD) $(SHRD_FLAGS1) $(SHRD_DEPS) $(SHRD_FLAGS) 

all:  $(OBJS) $(SHRD_OBJ)

installall: all dxserver.paths
	$(CP) $(OBJS) $(CLASS_DIR)
	echo "../unixnets" > $(CLASS_DIR)/dxserver.paths 
	$(CP) $(EXTRAS) $(BIN_DIR)
	$(CP) $(SHRD_OBJ) $(LIB_DIR)
	$(CP) $(MACROS) $(MACRO_DIR)


clean: 
	rm -f *.o core $(SHRD_OBJ) $(OBJS)  DXServerThread.h dxserver.paths

